/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 16 19:41:22 GMT 2024
 */

package org.example.evosuite;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.example.evosuite.Calculator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Calculator_ESTest extends Calculator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.subtract(403, (-198));
      assertEquals(601, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.square(403);
      assertEquals(162409, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      double double0 = calculator0.sqrt(0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      double double0 = calculator0.power(614, 614);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.multiply(162409, 394);
      assertEquals(63989146, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.lcm(95, 1);
      assertEquals(95, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      boolean boolean0 = calculator0.isPrime((-208));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      boolean boolean0 = calculator0.isOdd((-417));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      boolean boolean0 = calculator0.isEven((-417));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.gcd((-1), (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      long long0 = calculator0.factorial(426);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      double double0 = calculator0.divide((-168), (-417));
      assertEquals(0.4028776978417266, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.add((-1078), (-3351));
      assertEquals((-4429), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Calculator calculator0 = new Calculator();
      int int0 = calculator0.abs((-1));
      assertEquals(1, int0);
  }
}
